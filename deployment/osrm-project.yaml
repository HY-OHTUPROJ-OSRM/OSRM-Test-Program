apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: osrm-project
objects:
  # routing-front
  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      name: routing-front
      labels:
        app: routing-front
        app.kubernetes.io/component: frontend
        app.kubernetes.io/instance: routing-front
        app.kubernetes.io/name: routing-front
        app.kubernetes.io/part-of: osrm-project
    spec:
      lookupPolicy:
        local: true
      tags:
        - name: latest
          from:
            kind: DockerImage
            name: quay.io/osrm-projekti/routing-front
          importPolicy:
            importMode: Legacy
          referencePolicy:
            type: Local
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: routing-front
      labels:
        app: routing-front
        app.kubernetes.io/component: frontend
        app.kubernetes.io/instance: routing-front
        app.kubernetes.io/name: routing-front
        app.kubernetes.io/part-of: osrm-project
        app.openshift.io/runtime: nodejs
      annotations:
        app.openshift.io/connects-to: routing-api
        app.openshift.io/vcs-uri: https://github.com/HY-OHTUPROJ-OSRM/routing-front
        image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"routing-front:latest"},"fieldPath":"spec.template.spec.containers[?(@.name==\"routing-front\")].image"}]'
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: routing-front
      template:
        metadata:
          labels:
            app: routing-front
        spec:
          containers:
          - name: routing-front
            image: routing-front:latest
            ports:
              - containerPort: 8080
  - apiVersion: v1
    kind: Service
    metadata:
      name: routing-front
      labels:
        app: routing-front
        app.kubernetes.io/component: frontend
        app.kubernetes.io/instance: routing-front
        app.kubernetes.io/name: routing-front
        app.kubernetes.io/part-of: osrm-project
        app.kubernetes.io/runtime-version: latest
      annotations:
        app.openshift.io/connects-to: routing-api
        app.openshift.io/vcs-uri: https://github.com/HY-OHTUPROJ-OSRM/routing-front
    spec:
      selector:
        app: routing-front
      ports:
        - name: 8080-tcp
          protocol: TCP
          port: 8080
          targetPort: 8080
  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      name: routing-front
      labels:
        app: routing-front
        app.kubernetes.io/component: frontend
        app.kubernetes.io/instance: routing-front
        app.kubernetes.io/name: routing-front
        app.kubernetes.io/part-of: osrm-project
        app.kubernetes.io/runtime-version: latest
      annotations:
        app.openshift.io/connects-to: routing-api
        app.openshift.io/vcs-uri: https://github.com/HY-OHTUPROJ-OSRM/routing-front
    spec:
      host: routing-front-ohtuprojekti-staging.apps.ocp-test-0.k8s.it.helsinki.fi
      port:
        targetPort: 8080-tcp
      to:
        kind: Service
        name: routing-front
      tls:
        termination: edge
        insecureEdgeTerminationPolicy: Redirect
  # routing-api
  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      name: routing-api
      labels:
        app: routing-api
        app.kubernetes.io/component: backend
        app.kubernetes.io/instance: routing-api
        app.kubernetes.io/name: routing-api
        app.kubernetes.io/part-of: osrm-project
    spec:
      lookupPolicy:
        local: true
      tags:
        - name: latest
          from:
            kind: DockerImage
            name: quay.io/osrm-projekti/routing-api
          importPolicy:
            importMode: Legacy
          referencePolicy:
            type: Local
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: routing-api
      labels:
        app: routing-api
        app.kubernetes.io/component: backend
        app.kubernetes.io/instance: routing-api
        app.kubernetes.io/name: routing-api
        app.kubernetes.io/part-of: osrm-project
        app.openshift.io/runtime: nodejs
      annotations:
        app.openshift.io/connects-to: map-database
        app.openshift.io/vcs-uri: https://github.com/HY-OHTUPROJ-OSRM/routing-api
        image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"routing-api:latest"},"fieldPath":"spec.template.spec.containers[?(@.name==\"routing-api\")].image"}]'
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: routing-api
      template:
        metadata:
          labels:
            app: routing-api
        spec:
          containers:
          - name: routing-api
            image: routing-api:latest
            ports:
              - containerPort: 3000
            env:
              - name: DATABASE_HOST
                value: map-database.ohtuprojekti-staging.svc.cluster.local
              - name: DATABASE_PORT
                value: "5432"
              - name: DATABASE_DB
                value: postgres
              - name: DATABASE_USER
                value: postgres
              - name: DATABASE_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: map-database-password
                    key: password
              - name: ROUTE_DATA_PATH
                value: ./route-data.osm
  - apiVersion: v1
    kind: Service
    metadata:
      name: routing-api
      labels:
        app: routing-api
        app.kubernetes.io/component: backend
        app.kubernetes.io/instance: routing-api
        app.kubernetes.io/name: routing-api
        app.kubernetes.io/part-of: osrm-project
        app.openshift.io/runtime-version: latest
      annotations:
        app.openshift.io/connects-to: map-database
        app.openshift.io/vcs-uri: https://github.com/HY-OHTUPROJ-OSRM/routing-api
    spec:
      selector:
        app: routing-api
      ports:
        - name: 3000-tcp
          protocol: TCP
          port: 3000
          targetPort: 3000
  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      name: routing-api
      labels:
        app: routing-api
        app.kubernetes.io/component: backend
        app.kubernetes.io/instance: routing-api
        app.kubernetes.io/name: routing-api
        app.kubernetes.io/part-of: osrm-project
        app.openshift.io/runtime-version: latest
      annotations:
        app.openshift.io/vcs-uri: https://github.com/HY-OHTUPROJ-OSRM/routing-api
    spec:
      host: routing-api-ohtuprojekti-staging.apps.ocp-test-0.k8s.it.helsinki.fi
      port:
        targetPort: 3000-tcp
      to:
        kind: Service
        name: routing-api
      tls:
        termination: edge
        insecureEdgeTerminationPolicy: Redirect
  # map-database
  - apiVersion: v1
    kind: Secret
    metadata:
      name: map-database-password
    type: Opaque
    stringData:
      password: ${POSTGRES_PASSWORD}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: map-database
      labels:
        app: map-database
        app.kubernetes.io/component: database
        app.kubernetes.io/instance: map-database
        app.kubernetes.io/name: map-database
        app.kubernetes.io/part-of: osrm-project
        app.openshift.io/runtime: postgresql
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: map-database
      template:
        metadata:
          labels:
            app: map-database
        spec:
          volumes:
            - name: map-data
              persistentVolumeClaim:
                claimName: osrm-data
          containers:
          - name: map-database
            image: postgis/postgis
            ports:
              - containerPort: 5432
            volumeMounts:
              - name: map-data
                mountPath: /var/lib/postgresql/data
            env:
              - name: POSTGRES_DB
                value: postgres
              - name: POSTGRES_USER
                value: postgres
              - name: POSTGRES_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: map-database-password
                    key: password
              - name: PGDATA
                value: /var/lib/postgresql/data/pgdata
  - apiVersion: v1
    kind: Service
    metadata:
      name: map-database
      labels:
        app: map-database
        app.kubernetes.io/component: database
        app.kubernetes.io/instance: map-database
        app.kubernetes.io/name: map-database
        app.kubernetes.io/part-of: osrm-project
    spec:
      selector:
        app: map-database
      ports:
        - name: 5432-tcp
          protocol: TCP
          port: 5432
          targetPort: 5432
parameters:
- name: POSTGRES_PASSWORD
